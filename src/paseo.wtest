import paseo.*
describe "test de una familia que NO pasea" {

//NOTA: Este fixture está incompleto y sirve para comenzar a testear el examen.
//Es a modo de ayuda, pero no es obligatorio respetar este escenario. 
// Puede modificarse tanto como sea necesario.

	var mediaIzquierda = new ElementoIzquierdo(desgaste = 1) //elemento de par
	var mediaDerecha = new ElementoDerecho(desgaste = 3)
	var zapatillaIzquierda = new ElementoIzquierdo() //elemento de par
	var zapatillaDerecha = new ElementoDerecho()
	var ojotaIzquierda = new ElementoIzquierdo(desgaste = 1, nivelDeAbrigo = 2)
	var ojotaDerecha = new ElementoDerecho(desgaste = 3, nivelDeAbrigo = 3)
	
	//prenda par, la media izquierda tiene que tener 1 de desgaste, la derecha 3, el abrigo es default 0
    var mediasZoe = new PrendaDeAPares(talle=s, elementos = [mediaIzquierda, mediaDerecha] ) 
	
	//prenda par, el izquierdo y derecho tiene los valores default (desgaste 0, abrigo 1)
	var zapatillasZoe = new PrendaDeAPares(talle=s, elementos = [zapatillaIzquierda, zapatillaDerecha] ) 
	
	//prenda pesada con 5 de abrigo
	var jeanZoe = new RopaPesada(talle=s, nivelDeAbrigo=5) 
	
	//prenda liviana con desgaste default: 0
	var remeraZoe = new RopaLiviana(talle=s) 
	// prenda pesada con desgaste default: 0
	var camperaZoe = new RopaPesada(talle=s) 

	//un juguete para niños de 5 a 100 anios
	var ukelele = new Juguete(min=5, max=100)
	
	//prenda liviana con un desgaste de 5
	var remeraMilena = new RopaLiviana(talle=xs, desgaste=5) //prenda liviana
	//prenda liviana con desgaste default: 0
	var calzaMilena = new RopaLiviana(talle=xs) //prenda liviana

	//prenda par, la ojota izquierda tiene que tener 1 de desgaste y 2 de abrigo, la ojota derecha tiene 3 de desgaste y 3 de abrigo
    var ojotasMilena = new PrendaDeAPares(talle=l,[ojotaIzquierda, ojotaDerecha]) 
	
	//ninio
	var zoe = new Ninio(talle=s, edad=11, prendas=#{mediasZoe, zapatillasZoe, jeanZoe, remeraZoe, camperaZoe }) 
	//ninio problematico
	var milena = new NinioProblematico(talle=xs, edad=2, prendas = #{remeraMilena, calzaMilena, ojotasMilena }, juguete=ukelele)
	
	//familia	
	var familiaAptaSalir = new Familia(ninios = #{ zoe})

	//familia	
	var familiaNoAptaParaSalir= new Familia(ninios = #{milena, zoe})
	
	
//PUNTO 1	
	test "comodidad" {
		
		assert.equals(6, mediasZoe.nivelDeComodidad(zoe))
		assert.equals(8, zapatillasZoe.nivelDeComodidad(zoe))
		assert.equals(8, jeanZoe.nivelDeComodidad(zoe))
		assert.equals(10, remeraZoe.nivelDeComodidad(zoe))
		assert.equals(8, camperaZoe.nivelDeComodidad(zoe))
		assert.equals(7, remeraMilena.nivelDeComodidad(milena))		
		assert.equals(10, calzaMilena.nivelDeComodidad(milena))
		assert.equals(-3, ojotasMilena.nivelDeComodidad(milena))
	}

//PUNTO 2		
	test "intercambiar pares ok" {
		var mediaIzq = mediasZoe.izquierdo()
		var mediaDer = mediasZoe.derecho()
		var zapaIzq = zapatillasZoe.izquierdo()
		var zapaDer = zapatillasZoe.derecho()
		
		mediasZoe.intercambiar(zapatillasZoe)

		assert.equals(mediaIzq, mediasZoe.izquierdo())
		assert.equals(mediaDer, zapatillasZoe.derecho())
		assert.equals(zapaIzq, zapatillasZoe.izquierdo())
		assert.equals(zapaDer, mediasZoe.derecho())
				
	}
	
	test "intercambiar pares no ok" {
		//Que sucede si intercambio un par de talles distinto?
		//probar el cambio entre las ojotas de milena y las medias de zoe
		//El test está incompleto!
		ojotasMilena.intercambiar(mediasZoe)
	}

//PUNTO 3	
	test "nivel de abrigo" {
		assert.equals(2, mediasZoe.nivelDeAbrigo())
		assert.equals(2, zapatillasZoe.nivelDeAbrigo())
		assert.equals(5, jeanZoe.nivelDeAbrigo())
		assert.equals(1, remeraZoe.nivelDeAbrigo())
		assert.equals(3, camperaZoe.nivelDeAbrigo())
		assert.equals(1, remeraMilena.nivelDeAbrigo())		
		assert.equals(1, calzaMilena.nivelDeAbrigo())
		assert.equals(5, ojotasMilena.nivelDeAbrigo())
	}

//PUNTO 4		
	test "puede salir de paseo" {
		assert.that(familiaAptaSalir.puedeSalirDePaseo())
		assert.notThat(familiaNoAptaParaSalir.puedeSalirDePaseo())
	}
//PUNTO 5
	
	test "infaltables" {
		assert.equals(#{jeanZoe,calzaMilena}, familiaNoAptaParaSalir.prendasInfaltables())		
	}
	test "chiquitos" {
		assert.equals(#{milena}, familiaNoAptaParaSalir.niniosChiquitos())		
	}
	
//PUNTO 6	
test "salir de paseo ok" {
		familiaAptaSalir.pasear()
		assert.equals(1.8, mediaIzquierda.desgaste())
		assert.equals(4.2, mediaDerecha.desgaste())
		assert.equals(3, mediasZoe.desgaste())
		assert.equals(1, zapatillasZoe.desgaste())
		assert.equals(1, jeanZoe.desgaste())
		assert.equals(1, remeraZoe.desgaste())
		assert.equals(1, camperaZoe.desgaste())
		
	}
//PUNTO 7	
	test "salir de paseo no ok" {
		//Que sucede si le pido pasear a una familia que no está lista?
		//El test está incompleto!
		familiaNoAptaParaSalir.pasear()
	}
	
	
}